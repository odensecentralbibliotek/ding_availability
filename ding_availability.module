<?php
/**
 * @file
 * Availability information for ding objects.
 */

// Load Field module hooks.
module_load_include('inc', 'ding_availability', 'ding_availability.field');

/**
 * Implements hook_menu().
 */
function ding_availability_menu() {
  $items['ding_availability/items'] = array(
    'title' => 'Availability status',
    'page callback' => 'ding_availability_js',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['ding_availability/holdings'] = array(
    'title' => 'Availability and holding status',
    'page callback' => 'ding_availability_holdings_js',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/ding/availability'] = array(
    'title' => 'Ding availability',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_availability_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'ding_availability.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_ding_provider_user().
 */
function ding_availability_ding_provider_user() {
  return array(
    'availability' => array(
      'required' => TRUE,
      'install time setup' => TRUE,
    ),
  );
}

/**
 * Implements hook_theme();
 */
function ding_availability_theme($existing, $type, $theme, $path) {
  return array(
    'ding_availability' => array(
      'template' => 'ding-availability',
      'variables' => array(
        'status' => NULL,
        'reservable' => NULL,
        'available' => NULL,
        'holdings' => NULL,
        'total_count' => NULL,
        'reservable_count' => NULL,
        'reserved_count' => NULL,
      ),
      'path' => $path . '/templates',
    ),
  );
}

/**
 *
 */
function ding_availability_js($provider_ids) {
  drupal_json_output(ding_availability_items(explode(',', $provider_ids)));
}

/**
 *
 */
function ding_availability_holdings_js($provider_ids) {
  drupal_json_output(ding_availability_holdings(explode(',', $provider_ids)));
}

/**
 *
 */
function ding_availability_items($provider_ids) {
  if (ding_provider_implements('availability', 'items')) {
    $items = ding_provider_invoke('availability', 'items', $provider_ids);
    if (!$items) {
      return array();
    }
    foreach ($items as &$item) {
      $item += array(
        'reservable' => FALSE,
        'available' => FALSE,
      );
      if ($item['is_internet']) {
        $item['available'] = FALSE;
      }
      _ding_availability_text($item);
    }
  }
  else {
    $items = ding_availability_holdings($provider_ids);
  }

  return $items;
}

/**
 *
 */
function ding_availability_holdings($provider_ids) {
  $items = ding_provider_invoke('availability', 'holdings', $provider_ids, variable_get('ding_availability_only_available', TRUE));
  if (!$items) {
    return array();
  }
  foreach ($items as &$item) {
    $item += array(
      'reservable' => FALSE,
      'available' => FALSE,
      'holdings' => array(),
    );
    $rows = array();
    _ding_availability_text($item);
    foreach ($item['holdings'] as $holding) {
      $rows[] = array(
        'class' => array($holding['available_count'] > 0 ? 'available' : 'unavailable'),
        'data' => array(
          'placement' => join(' â†’ ', $holding['location']),
          'home' => $holding['available_count'],
        ),
      );
    }
    $holdings = theme('table__ding_availability', array(
      'header' => array(
        'placement' => t('Placement'),
        'home' => t('Home'),
      ),
      'rows' => $rows,
    ));
    $item['html'] = theme('ding_availability', array(
      'status' => $item['status'],
      'reservable' => $item['reservable'],
      'available' => $item['available'],
      'holdings' => $holdings,
      'total_count' => $item['total_count'],
      'reservable_count' => $item['reservable_count'],
      'reserved_count' => $item['reserved_count'],
    ));
  }

  return $items;
}

/**
 * Adds the human readable status text of an item.
 */
function _ding_availability_text(&$item) {
  
  foreach ($item['holdings'] as $key => $value) {
    if ($value['available_count'] == 0){
    $item['holdings'][$key]['available_count'] = t('Nothing');
    }
  }
  if ($item['available'] && $item['reservable']) {
    $item['status'] = t('available');
  }
  elseif (!$item['available'] && $item['reservable']) {
    $item['status'] = t('on loan');
  }
  elseif (!$item['available'] && !$item['reservable']) {
    $item['status'] = t('unavailable');
  }
  elseif ($item['available'] && !$item['reservable']) {
    $item['status'] = t('available');
  }
}


/**
 * Implements hook_block_info().
 * Define availability legend block.
 */
function ding_availability_block_info() {
  return array(
    'legend' => array(
      'info' => t('Ding availability legend'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    ),
  );
}

/**
 * Implements hook_block_view().
 * Define availability legend block.
 */
function ding_availability_block_view($delta = '') {
  $block['subject'] = t('Ding availability legend');
  $block['content'] = ding_availability_render_legend();
  return $block;
}

/**
 * Return rendered legend block for availability types.
 */
function ding_availability_render_legend() {

  drupal_add_css(drupal_get_path('module', 'ding_availability') . '/css/ding_availability_legend.css');

  // construct the image's path (.gif stored in a module subdir)
  $image_path = drupal_get_path('module', 'ding_availability') . '/images/blank.gif';

  // make some text, image's alt & title tags (SEO, accessibility)
  $availability_legend['available']     = t('Available');
  $availability_legend['on-loan']       = t('On loan');
  $availability_legend['unavailable']   = t('Unavailable');


  // render image html using theme_image (returns NULL if file doesn't exist)
  foreach ( $availability_legend as $key => $val ) {
    $format_label = '<span class="availability-label">' . $val . '</span>';
    $format_image = theme('image', array('path' => $image_path, 'alt' => $val, 'title' => $val));
    $format_items[] = '<div class="availability-legend-item ' . $key . '">' . $format_image . $format_label . '</div>';
  };
  $format_items[] = '<div class="clearfix"></div>';

  return '<div class="availability-legend">' . implode($format_items) . '</div>';

}

/**
 * ting_object_entities preprocessor.
 */
function ding_availability_preprocess_ting_object_entities(&$variables) {
  if (!empty($variables['content']) && function_exists('ding_availability_render_legend')) {
    $variables['content']['availability_legend'] = array(
      '#markup' => ding_availability_render_legend(),
      '#weight' => -10,
    );
  }
}

